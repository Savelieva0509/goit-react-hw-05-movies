{"version":3,"file":"static/js/509.548717d9.chunk.js","mappings":"oRACMA,EAAG,mCAEIC,EAAa,WACvB,IAAMC,EAAUC,EAAAA,EAAAA,IAAA,gEAAmEH,IAElF,OADAI,QAAQC,IAAIH,GACLA,CAEV,EACYI,EAAc,SAACC,GAExB,OADgBJ,EAAAA,EAAAA,IAAA,4DAA+DH,EAA/D,kBAA4EO,EAA5E,WAEnB,EACYC,EAAa,SAACC,GAEvB,OADiBN,EAAAA,EAAAA,IAAA,6CAAgDM,EAAhD,oBAA8DT,EAA9D,mBAGpB,EACYU,EAAU,SAACD,GAEpB,OADeN,EAAAA,EAAAA,IAAA,6CAAgDM,EAAhD,4BAAsET,EAAtE,mBAElB,EACYW,EAAa,SAACF,GAEvB,OADeN,EAAAA,EAAAA,IAAA,6CAAgDM,EAAhD,4BAAsET,EAAtE,0BAElB,C,oICxBD,EAA2B,+BAA3B,EAA6E,uCAA7E,EAAwI,wCAAxI,EAA+L,mCAA/L,EAAyO,2B,SCuFzO,EAhFqB,WAAO,IAAD,IACnBY,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAmBJ,EAAAA,EAAAA,UAAS,MAArBK,GAAP,gBAEAC,EAAAA,EAAAA,YAAU,WACR,IACEF,GAAa,IACbZ,EAAAA,EAAAA,IAAaM,GACVS,SAAQ,kBAAMH,GAAa,EAAnB,IACRI,MAAK,SAAAtB,GACJgB,EAAShB,EAASuB,MAClBrB,QAAQC,IAAIH,EACb,GAIJ,CAHC,MAAOwB,GACPL,EAASK,GACTN,GAAa,EACd,CACF,GAAE,CAACC,EAAUP,IACd,IAAMa,EAAQ,oBAAGf,EAASgB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAEzC,OACE,gBAAKC,UAAWC,EAAhB,SACGd,IACC,4BACE,SAAC,KAAD,CAAMe,GAAIL,EAAUG,UAAWC,EAA/B,4BAGCZ,IAAa,SAACc,EAAA,EAAD,KACd,iBAAKH,UAAWC,EAAhB,WACE,gBACEG,IACEjB,EAAMkB,YAAN,0CACuClB,EAAMkB,aACzCC,EAENC,IAAKpB,EAAMqB,kBAEb,8BAAMrB,EAAMqB,mBACZ,yCAAiBrB,EAAMsB,iBACvB,sCACA,uBAAItB,EAAMuB,YACV,wBACGvB,EAAMwB,OAAOC,KAAI,gBAAGjC,EAAH,EAAGA,GAAIkC,EAAP,EAAOA,KAAP,OAChB,wBAAcA,GAALlC,EADO,UAKtB,4BACE,oDACA,SAAC,KAAD,CACEuB,GAAI,OACJJ,MAAO,CAAEC,KAAMF,GACfG,UAAW,qBAAGc,SACWb,EAAXA,CADH,EAHb,mBASA,SAAC,KAAD,CACEC,GAAI,UACJJ,MAAO,CAAEC,KAAMF,GACfG,UAAW,qBAAGc,SACWb,EAAXA,CADH,EAHb,yBAUF,SAAC,EAAAc,SAAD,CAAUC,UAAU,SAACb,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,UAMX,C","sources":["API.js","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\nconst KEY = `946436ca4073577028dd0f99867a7b5f`\n\nexport const getTrending =()=>{\n   const response= axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`)\n    console.log(response);\n    return response;\n\n}\nexport const searchMovie = (query)=>{\n    const response= axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&page=1`)\n    return response\n}\nexport const movieDetails=(id)=>{\n    const response = axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`)\n    return response\n   \n}\nexport const movieCast=(id)=>{\n    const response=axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`)\n    return response\n}\nexport const movieReviews=(id)=>{\n    const response=axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    return response\n}","// extracted by mini-css-extract-plugin\nexport default {\"backlink\":\"MovieDetails_backlink__5rcoR\",\"movie__container\":\"MovieDetails_movie__container__WkPt3\",\"inform__container\":\"MovieDetails_inform__container__ChOG3\",\"link__active\":\"MovieDetails_link__active__8LZh4\",\"link\":\"MovieDetails_link__wf74g\"};","import { useLocation, useParams } from 'react-router-dom';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet, Link, NavLink } from 'react-router-dom';\nimport { movieDetails } from '../../API';\nimport Loader from 'components/Loader/Loader';\nimport img from 'components/default.png';\nimport css from '../MovieDetails/MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [setError] = useState(null);\n\n  useEffect(() => {\n    try {\n      setIsLoading(true);\n      movieDetails(movieId)\n        .finally(() => setIsLoading(false))\n        .then(response => {\n          setMovie(response.data);\n          console.log(response);\n        });\n    } catch (error) {\n      setError(error);\n      setIsLoading(false);\n    }\n  }, [setError, movieId]);\n  const backLink = location.state?.from ?? '/movies';\n\n  return (\n    <div className={css.movie__container}>\n      {movie && (\n        <div>\n          <Link to={backLink} className={css.backlink}>\n            &#8592; Go back\n          </Link>\n          {isLoading && <Loader />}\n          <div className={css.inform__container}>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w300/${movie.poster_path}`\n                  : img\n              }\n              alt={movie.original_title}\n            />\n            <h2> {movie.original_title}</h2>\n            <p>User score : {movie.vote_average}</p>\n            <h2>Overview</h2>\n            <p>{movie.overview}</p>\n            <ul>\n              {movie.genres.map(({ id, name }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </ul>\n          </div>\n          <div>\n            <h2>Additional Information</h2>\n            <NavLink\n              to={'cast'}\n              state={{ from: backLink }}\n              className={({ isActive }) =>\n                !isActive ? css.link : css.link__active\n              }\n            >\n              Cast\n            </NavLink>\n            <NavLink\n              to={'reviews'}\n              state={{ from: backLink }}\n              className={({ isActive }) =>\n                !isActive ? css.link : css.link__active\n              }\n            >\n              Reviews\n            </NavLink>\n          </div>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["KEY","getTrending","response","axios","console","log","searchMovie","query","movieDetails","id","movieCast","movieReviews","location","useLocation","movieId","useParams","useState","movie","setMovie","isLoading","setIsLoading","setError","useEffect","finally","then","data","error","backLink","state","from","className","css","to","Loader","src","poster_path","img","alt","original_title","vote_average","overview","genres","map","name","isActive","Suspense","fallback"],"sourceRoot":""}