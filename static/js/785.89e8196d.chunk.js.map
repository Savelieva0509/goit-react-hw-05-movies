{"version":3,"file":"static/js/785.89e8196d.chunk.js","mappings":"oRACMA,EAAG,mCAEIC,EAAa,WACvB,IAAMC,EAAUC,EAAAA,EAAAA,IAAA,gEAAmEH,IAElF,OADAI,QAAQC,IAAIH,GACLA,CAEV,EACYI,EAAc,SAACC,GAExB,OADgBJ,EAAAA,EAAAA,IAAA,4DAA+DH,EAA/D,kBAA4EO,EAA5E,WAEnB,EACYC,EAAa,SAACC,GAEvB,OADiBN,EAAAA,EAAAA,IAAA,6CAAgDM,EAAhD,oBAA8DT,EAA9D,mBAGpB,EACYU,EAAU,SAACD,GAEpB,OADeN,EAAAA,EAAAA,IAAA,6CAAgDM,EAAhD,4BAAsET,EAAtE,mBAElB,EACYW,EAAa,SAACF,GAEvB,OADeN,EAAAA,EAAAA,IAAA,6CAAgDM,EAAhD,4BAAsET,EAAtE,0BAElB,C,uFCuBD,UA3CgB,WACZ,OAA8BY,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAmBL,EAAAA,EAAAA,UAAS,MAArBO,GAAP,eAgBC,IAdFC,EAAAA,EAAAA,YAAU,WACT,IACEJ,GAAa,IACbL,EAAAA,EAAAA,IAAaM,GACVI,SAAQ,kBAAML,GAAa,EAAnB,IACRM,MAAK,SAAApB,GACJY,EAAWZ,EAASqB,KAAKC,QAC1B,GAIJ,CAHC,MAAOC,GACPN,EAASM,GACTT,GAAa,EACd,CACD,GAAE,CAACG,EAAUF,IAEPJ,EAIR,OACE,gCACGE,IAAa,SAAC,IAAD,IACbF,EAAQa,OAAS,GAChB,wBACGb,EAAQc,KAAI,gBAAGlB,EAAH,EAAGA,GAAImB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,mCAAWD,MACX,6BAAKC,OAFEpB,EADE,OAQf,sEAIP,C","sources":["API.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\nconst KEY = `946436ca4073577028dd0f99867a7b5f`\n\nexport const getTrending =()=>{\n   const response= axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`)\n    console.log(response);\n    return response;\n\n}\nexport const searchMovie = (query)=>{\n    const response= axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&page=1`)\n    return response\n}\nexport const movieDetails=(id)=>{\n    const response = axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`)\n    return response\n   \n}\nexport const movieCast=(id)=>{\n    const response=axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`)\n    return response\n}\nexport const movieReviews=(id)=>{\n    const response=axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    return response\n}","import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { movieReviews } from '../../API';\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const { movieId } = useParams();\n    const [setError] = useState(null);\n\n   useEffect(() => {\n    try {\n      setIsLoading(true);\n      movieReviews(movieId)\n        .finally(() => setIsLoading(false))\n        .then(response => {\n          setReviews(response.data.results);\n        });\n    } catch (error) {\n      setError(error);\n      setIsLoading(false);\n    }\n   }, [setError, movieId]);\n    \n     if (!reviews) {\n    return;\n    }\n    \n  return (\n    <>\n      {isLoading && <Loader />}\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>Author:{author}</p>\n              <p> {content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["KEY","getTrending","response","axios","console","log","searchMovie","query","movieDetails","id","movieCast","movieReviews","useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","setError","useEffect","finally","then","data","results","error","length","map","author","content"],"sourceRoot":""}