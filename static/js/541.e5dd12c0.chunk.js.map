{"version":3,"file":"static/js/541.e5dd12c0.chunk.js","mappings":"oRACMA,EAAG,mCAEIC,EAAa,WACvB,IAAMC,EAAUC,EAAAA,EAAAA,IAAA,gEAAmEH,IAElF,OADAI,QAAQC,IAAIH,GACLA,CAEV,EACYI,EAAc,SAACC,GAExB,OADgBJ,EAAAA,EAAAA,IAAA,4DAA+DH,EAA/D,kBAA4EO,EAA5E,WAEnB,EACYC,EAAa,SAACC,GAEvB,OADiBN,EAAAA,EAAAA,IAAA,6CAAgDM,EAAhD,oBAA8DT,EAA9D,mBAGpB,EACYU,EAAU,SAACD,GAEpB,OADeN,EAAAA,EAAAA,IAAA,6CAAgDM,EAAhD,4BAAsET,EAAtE,mBAElB,EACYW,EAAa,SAACF,GAEvB,OADeN,EAAAA,EAAAA,IAAA,6CAAgDM,EAAhD,4BAAsET,EAAtE,0BAElB,C,kICnBYY,EAAO,WAChB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAmBL,EAAAA,EAAAA,UAAS,MAArBO,GAAP,eAgBC,IAdFC,EAAAA,EAAAA,YAAU,WACT,IACEJ,GAAa,IACbP,EAAAA,EAAAA,IAAUQ,GACPI,SAAQ,kBAAML,GAAa,EAAnB,IACRM,MAAK,SAAArB,GACJa,EAAQb,EAASsB,KAAKV,KACvB,GAIJ,CAHC,MAAOW,GACPL,EAASK,GACTR,GAAa,EACd,CACD,GAAE,CAACG,EAAUF,IAEPJ,EAGR,OACE,gCACGE,IAAa,SAAC,IAAD,IACbF,EAAKY,OAAS,GACb,wBACGZ,EAAKa,KAAI,YAAqD,IAAlDlB,EAAiD,EAAjDA,GAAImB,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAC5C,OACE,2BACE,gBACEC,MAAO,IACPC,OAAQ,IACRC,IACEJ,EAAY,0CAC2BA,GACnCK,EAENC,IAAKP,KAEP,uBAAIA,KACJ,uCAAeE,OAZRrB,EAeZ,OAGH,sEAIP,C","sources":["API.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\nconst KEY = `946436ca4073577028dd0f99867a7b5f`\n\nexport const getTrending =()=>{\n   const response= axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`)\n    console.log(response);\n    return response;\n\n}\nexport const searchMovie = (query)=>{\n    const response= axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&page=1`)\n    return response\n}\nexport const movieDetails=(id)=>{\n    const response = axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`)\n    return response\n   \n}\nexport const movieCast=(id)=>{\n    const response=axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`)\n    return response\n}\nexport const movieReviews=(id)=>{\n    const response=axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    return response\n}","import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { movieCast } from '../../API';\nimport img from 'components/default.png';\n\nexport const Cast = () => {\n    const [cast, setCast] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const { movieId } = useParams();\n    const [setError] = useState(null);\n\n   useEffect(() => {\n    try {\n      setIsLoading(true);\n      movieCast(movieId)\n        .finally(() => setIsLoading(false))\n        .then(response => {\n          setCast(response.data.cast);\n        });\n    } catch (error) {\n      setError(error);\n      setIsLoading(false);\n    }\n   }, [setError, movieId]);\n    \n     if (!cast) {\n    return;\n  }\n  return (\n    <>\n      {isLoading && <Loader />}\n      {cast.length > 0 ? (\n        <ul>\n          {cast.map(({ id, original_name, profile_path, character }) => {\n            return (\n              <li key={id}>\n                <img\n                  width={200}\n                  height={300}\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                      : img\n                  }\n                  alt={original_name}\n                />\n                <p>{original_name}</p>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don`t have any information about cast</p>\n      )}\n    </>\n  );\n}"],"names":["KEY","getTrending","response","axios","console","log","searchMovie","query","movieDetails","id","movieCast","movieReviews","Cast","useState","cast","setCast","isLoading","setIsLoading","movieId","useParams","setError","useEffect","finally","then","data","error","length","map","original_name","profile_path","character","width","height","src","img","alt"],"sourceRoot":""}