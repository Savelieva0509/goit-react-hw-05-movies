{"version":3,"file":"static/js/354.3082c135.chunk.js","mappings":"oRACMA,EAAG,mCAEIC,EAAa,WACvB,IAAMC,EAAUC,EAAAA,EAAAA,IAAA,gEAAmEH,IAElF,OADAI,QAAQC,IAAIH,GACLA,CAEV,EACYI,EAAc,SAACC,GAExB,OADgBJ,EAAAA,EAAAA,IAAA,4DAA+DH,EAA/D,kBAA4EO,EAA5E,WAEnB,EACYC,EAAa,SAACC,GAEvB,OADiBN,EAAAA,EAAAA,IAAA,6CAAgDM,EAAhD,oBAA8DT,EAA9D,mBAGpB,EACYU,EAAU,SAACD,GAEpB,OADeN,EAAAA,EAAAA,IAAA,6CAAgDM,EAAhD,4BAAsET,EAAtE,mBAElB,EACYW,EAAa,SAACF,GAEvB,OADeN,EAAAA,EAAAA,IAAA,6CAAgDM,EAAhD,4BAAsET,EAAtE,0BAElB,C,kJCjBYY,EAAe,WAAO,IAAD,IAC1BC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAmBJ,EAAAA,EAAAA,UAAS,MAArBK,GAAP,gBAECC,EAAAA,EAAAA,YAAU,WACT,IACEF,GAAa,IACbb,EAAAA,EAAAA,IAAaO,GACVS,SAAQ,kBAAMH,GAAa,EAAnB,IACRI,MAAK,SAAAvB,GACJiB,EAASjB,EAASwB,MAClBtB,QAAQC,IAAIH,EACb,GAIJ,CAHC,MAAOyB,GACPL,EAASK,GACTN,GAAa,EACd,CACF,GAAE,CAACC,EAAUP,IACd,IAAMa,EAAQ,oBAAGf,EAASgB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAEvC,OACA,8BACGZ,IACC,4BACE,SAAC,KAAD,CAAMa,GAAIH,EAAV,qBACCR,IAAa,SAAC,IAAD,KACd,gBAAKY,IACHd,EAAMe,YAAN,0CAAuDf,EAAMe,aAAgBC,EAE/EC,IAAKjB,EAAMkB,kBACX,8BAAMlB,EAAMkB,mBACZ,yCAAiBlB,EAAMmB,iBACvB,sCACA,uBAAInB,EAAMoB,YACV,wBACGpB,EAAMqB,OAAOC,KAAI,gBAAG/B,EAAH,EAAGA,GAAIgC,EAAP,EAAOA,KAAP,OAChB,wBAAcA,GAALhC,EADO,OAIlB,4BACJ,oDACA,SAAC,KAAD,CAAMsB,GAAI,OAAQF,MAAO,CAAEC,KAAMF,GAAjC,mBACA,SAAC,KAAD,CAAMG,GAAI,UAAWF,MAAO,CAAEC,KAAMF,GAApC,yBAEE,SAAC,EAAAc,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACF,SAAC,KAAD,UAMP,C","sources":["API.js","components/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\nconst KEY = `946436ca4073577028dd0f99867a7b5f`\n\nexport const getTrending =()=>{\n   const response= axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`)\n    console.log(response);\n    return response;\n\n}\nexport const searchMovie = (query)=>{\n    const response= axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&page=1`)\n    return response\n}\nexport const movieDetails=(id)=>{\n    const response = axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`)\n    return response\n   \n}\nexport const movieCast=(id)=>{\n    const response=axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`)\n    return response\n}\nexport const movieReviews=(id)=>{\n    const response=axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    return response\n}","import { useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport { Outlet, Link } from 'react-router-dom';\nimport { movieDetails } from '../../API';\nimport Loader from 'components/Loader/Loader';\nimport img from 'components/default.png';\n\n\nexport const MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [setError] = useState(null);\n\n   useEffect(() => {\n    try {\n      setIsLoading(true);\n      movieDetails(movieId)\n        .finally(() => setIsLoading(false))\n        .then(response => {\n          setMovie(response.data);\n          console.log(response);\n        });\n    } catch (error) {\n      setError(error);\n      setIsLoading(false);\n    }\n  }, [setError, movieId ]);\n  const backLink = location.state?.from ?? '/movies';\n\n    return (\n    <>\n      {movie && (\n        <div>\n          <Link to={backLink}>Go back</Link>\n          {isLoading && <Loader />}\n          <img src={\n            movie.poster_path ? `https://image.tmdb.org/t/p/w300/${movie.poster_path}` : img\n          }\n          alt={movie.original_title} />\n          <h2> {movie.original_title}</h2>\n          <p>User score : {movie.vote_average}</p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <ul>\n            {movie.genres.map(({ id, name }) => (\n              <li key={id}>{name}</li>\n            ))}\n            </ul>\n            <div>\n        <h2>Additional Information</h2>\n        <Link to={'cast'} state={{ from: backLink }}>Cast</Link>\n        <Link to={'reviews'} state={{ from: backLink }}>Reviews</Link>\n      </div>\n          <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n        </div>\n      )}\n    </>\n  );\n};\n"],"names":["KEY","getTrending","response","axios","console","log","searchMovie","query","movieDetails","id","movieCast","movieReviews","MovieDetails","location","useLocation","movieId","useParams","useState","movie","setMovie","isLoading","setIsLoading","setError","useEffect","finally","then","data","error","backLink","state","from","to","src","poster_path","img","alt","original_title","vote_average","overview","genres","map","name","Suspense","fallback"],"sourceRoot":""}